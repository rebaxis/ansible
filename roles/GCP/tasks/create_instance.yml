---
- name: create a disk
  gcp_compute_disk:
    name: disk-instance-proxy
    size_gb: 20
    source_image: "{{ image }}"
    zone: "{{ instance_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: disk

- debug:
    msg: "{{ disk }}"

- name: create a network
  gcp_compute_network:
    name: network-instance-proxy
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: network

- debug:
    msg: "{{ network }}"

- name: create a firewall
  gcp_compute_firewall:
    name: allow-ssh-https
    network: {'selfLink': "global/networks/{{ network.name }}"}
    allowed:
      - ip_protocol: tcp
        ports: "{{ open_ports }}"
    source_ranges: ['0.0.0.0/0']
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: firewall

- debug:
    msg: "{{ firewall }}"

- name: create an address
  gcp_compute_address:
    name: address-instance-proxy
    region: "{{ address_region }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: address

- debug:
    msg: "{{ address }}"

- name: create an instance
  gcp_compute_instance:
    name: proxy-squid
    machine_type: n1-standard-1
    disks:
      - auto_delete: 'true'
        boot: 'true'
        source: "{{ disk }}"
    labels:
      environment: production
    metadata:
      ssh-keys: "{{ my_user_open_key }}"
    network_interfaces:
      - network: "{{ network }}"
        access_configs:
          - name: External NAT
            nat_ip: "{{ address }}"
            type: ONE_TO_ONE_NAT
    zone: "{{ instance_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: instance_info

- debug:
    msg: "{{ instance_info }}"

- name: Wait for SSH to come up
  wait_for:
   host: "{{ address.address }}"
   port: 22
   timeout: 60

- name: add proxy to inventory file
  add_host:
    groups: instance
    name: "{{ address.address }}"
    ansible_ssh_user: "{{ my_user }}"
    ansible_become: yes
